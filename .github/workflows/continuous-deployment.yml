name: Continuous Deployment

on:
    release:
        types: [published]

env:
    NODE_VERSION: 16
    CI: true
    CYPRESS_CACHE_FOLDER: cypress_cache
    NUMBER_OF_RUNNERS: 6

jobs:
    setup-project:
        runs-on: ubuntu-latest

        outputs:
            component-tests: ${{ steps.parse-specs.outputs.component-tests }}

        steps:
            - name: Checkout default branch
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"

            - name: Cache dependencies
              id: npm_cache
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                      ${{ env.CYPRESS_CACHE_FOLDER }}
                  key: node_modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: node_modules-

            - name: Install dependencies
              if: steps.npm_cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Parse test files for parallelization
              id: parse-specs
              uses: tgamauf/cypress-parallel@v1
              with:
                  count-runners: ${{ env.NUMBER_OF_RUNNERS }}

    component-tests:
        runs-on: ubuntu-latest

        needs: [setup-project]

        strategy:
            fail-fast: false
            matrix:
                spec: ${{ fromJson(needs.setup-project.outputs.component-tests) }}

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Cache dependencies
              id: npm_cache
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                      ${{ env.CYPRESS_CACHE_FOLDER }}
                  key: node_modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: node_modules-

            - name: Component Tests
              run: npm run test -- --spec ${{ matrix.spec }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish:
        runs-on: ubuntu-latest

        needs: [component-tests]

        permissions:
            packages: write
            contents: read

        steps:
            - name: Checkout default branch
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }} (npm repository)
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  registry-url: "https://registry.npmjs.org"
                  cache: "npm"

            - name: Cache dependencies
              id: npm_cache
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                      ${{ env.CYPRESS_CACHE_FOLDER }}
                  key: node_modules-${{ hashFiles('package-lock.json') }}
                  restore-keys: node_modules-

            - name: Build Arcade
              run: npm run build

            - name: Publish to npm
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Use Node.js ${{ env.NODE_VERSION }} (GitHub repository)
              uses: actions/setup-node@v3
              with:
                  registry-url: "https://npm.pkg.github.com"
                  node-version: ${{ env.NODE_VERSION }}

            - name: Publish to GitHub Packages
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
