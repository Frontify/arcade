name: Continuous Deployment

on:
    workflow_dispatch:
        branches:
            - 'main'
    push:
        branches:
            - 'beta'

env:
    NODE_VERSION: 18
    CI: true
    NUMBER_OF_RUNNERS: 8

jobs:
    linting:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.4
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint files
              run: pnpm run lint

    typecheck:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.4
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Typecheck files
              run: pnpm typecheck

    component-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                containers: [0, 1, 2, 3, 4, 5, 6, 7]

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.4
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

            - name: Install dependencies
              if: steps.npm_cache.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

            - name: Component Tests
              run: pnpm run test --spec $(node ./.github/lib/cypress-matrix.js ${{ env.NUMBER_OF_RUNNERS }} ${{ matrix.containers }})

    publish:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        needs: [linting, typecheck, component-tests]

        permissions:
            packages: write
            contents: write
            pull-requests: write

        steps:
            - name: Checkout default branch
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.4
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

            - name: Install dependencies
              if: steps.npm_cache.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

            - name: Build Fondue
              run: pnpm build

            - name: Release Fondue
              if: ${{ !contains(github.event.head_commit.message, format('chore(release-skip){0}', ':')) }}
              run: pnpm exec semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
