// vite.config.ts
import react from "file:///Users/noah.waldner/Documents/frontify/fondue/node_modules/.pnpm/@vitejs+plugin-react@4.3.0_vite@5.2.12_@types+node@20.14.2_sass@1.77.5_terser@5.31.1_/node_modules/@vitejs/plugin-react/dist/index.mjs";
import dts from "file:///Users/noah.waldner/Documents/frontify/fondue/node_modules/.pnpm/vite-plugin-dts@3.9.1_@types+node@20.14.2_rollup@4.18.0_typescript@5.4.5_vite@5.2.12_@types+n_2n66p2g2k6last7m6eav2442xa/node_modules/vite-plugin-dts/dist/index.mjs";
import tsConfigPaths from "file:///Users/noah.waldner/Documents/frontify/fondue/node_modules/.pnpm/vite-tsconfig-paths@4.3.2_typescript@5.4.5_vite@5.2.12_@types+node@20.14.2_sass@1.77.5_terser@5.31.1_/node_modules/vite-tsconfig-paths/dist/index.mjs";
import { defineConfig } from "file:///Users/noah.waldner/Documents/frontify/fondue/node_modules/.pnpm/vitest@1.6.0_@types+node@20.14.2_@vitest+ui@1.6.0_happy-dom@14.12.0_sass@1.77.5_terser@5.31.1/node_modules/vitest/dist/config.js";

// package.json
var peerDependencies = {
  "@frontify/fondue-tokens": "workspace:^",
  react: "^18",
  "react-dom": "^18"
};
var dependencies = {
  "@visx/axis": "^3.10.1",
  "@visx/glyph": "^3.3.0",
  "@visx/grid": "^3.5.0",
  "@visx/group": "^3.3.0",
  "@visx/hierarchy": "^3.3.0",
  "@visx/responsive": "^3.10.2",
  "@visx/scale": "^3.5.0",
  "@visx/shape": "^3.5.0",
  "@visx/text": "^3.3.0",
  "@visx/tooltip": "^3.3.0",
  "@visx/xychart": "^3.10.2",
  "lodash-es": "^4.17.21",
  "react-spring": "^9.7.3",
  "use-font-face-observer": "^1.2.2"
};

// vite.config.ts
var peerDependencies2 = Object.keys(peerDependencies);
var dependencies2 = Object.keys(dependencies);
var globals = {
  react: "React",
  "react-dom": "ReactDOM",
  "react-dom/client": "ReactDOMClient",
  "react/jsx-runtime": "react/jsx-runtime"
};
var vite_config_default = defineConfig({
  plugins: [
    react(),
    tsConfigPaths(),
    dts({ insertTypesEntry: true, rollupTypes: true, exclude: ["**/*.stories.tsx"] })
  ],
  build: {
    lib: {
      entry: "./src/index.ts",
      fileName: (format) => `[name].${format}.js`,
      name: "FondueCharts"
    },
    sourcemap: true,
    minify: true,
    rollupOptions: {
      external: [...dependencies2, ...peerDependencies2, "react-dom/client", "react/jsx-runtime"],
      output: [
        {
          name: "FondueCharts",
          format: "es",
          preserveModules: true,
          preserveModulesRoot: "src",
          globals
        },
        {
          name: "FondueCharts",
          format: "umd",
          globals
        },
        {
          name: "FondueCharts",
          format: "cjs",
          globals
        }
      ]
    }
  },
  test: {
    environment: "happy-dom",
    css: true,
    coverage: {
      enabled: true,
      provider: "v8",
      reporter: ["text", "lcov"],
      include: ["src/**/*.ts", "src/**/*.tsx"],
      exclude: ["src/**/test.ts", "src/**/test.tsx", "src/**/spec.ts", "src/**/spec.tsx"]
    }
  }
});
export {
  vite_config_default as default,
  globals
};
//# sourceMappingURL=data:application/json;base64,
