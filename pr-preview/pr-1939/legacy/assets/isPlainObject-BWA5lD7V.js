import{g as a}from"./_commonjsHelpers-BosuxZz1.js";import{_ as u,a as y,i as l}from"./_getPrototype-BKhpJVf-.js";var p={exports:{}},b="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",O=b,P=O;function c(){}function s(){}s.resetWarningCache=c;var m=function(){function e(E,k,w,F,W,f){if(f!==P){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}e.isRequired=e;function t(){return e}var r={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:s,resetWarningCache:c};return r.PropTypes=r,r};p.exports=m();var T=p.exports;const N=a(T);/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */function n(e){return Object.prototype.toString.call(e)==="[object Object]"}function D(e){var t,r;return n(e)===!1?!1:(t=e.constructor,t===void 0?!0:(r=t.prototype,!(n(r)===!1||r.hasOwnProperty("isPrototypeOf")===!1)))}var j=u,g=y,h=l,v="[object Object]",_=Function.prototype,S=Object.prototype,i=_.toString,R=S.hasOwnProperty,d=i.call(Object);function x(e){if(!h(e)||j(e)!=v)return!1;var t=g(e);if(t===null)return!0;var r=R.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&i.call(r)==d}var C=x;const $=a(C);export{N as P,$ as a,C as b,D as i};
