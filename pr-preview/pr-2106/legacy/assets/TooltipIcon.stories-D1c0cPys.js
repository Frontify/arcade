import{j as d}from"./jsx-runtime-BvI67ttx.js";import{I as T}from"./LegacyTooltip-BC90iaVE.js";import{I as S}from"./IconSize-BcCrF_mi.js";import{a as g,T as f}from"./TooltipIcon-DeJsuRhr.js";import"./index-BEEaWAwe.js";import"./_commonjsHelpers-BosuxZz1.js";import"./useLink-CGrBbYMo.js";import"./useFocusable-DySem7st.js";import"./useFocusRing-BuOUPy6p.js";import"./SSRProvider-4hSGecE0.js";import"./chain-Ck9CKbau.js";import"./usePopper-CHIbWn6Y.js";import"./index-CJX6plO5.js";import"./index-CfyPTyT-.js";import"./Button-ljOzJNbm.js";import"./useButton-CGbfYaYu.js";import"./focusStyle-CBFElZiz.js";import"./merge-DI-veSMP.js";import"./Portal-BFAtGiKe.js";import"./useMemoizedId-P52koD2W.js";import"./IconCheckMark-CEVoSHhf.js";import"./IconExclamationMarkCircle24-BbewMLoq.js";import"./IconExclamationMarkTriangle-BoexdZ5m.js";import"./IconExclamationMarkTriangle24-DY2uQ5A6.js";import"./IconQuestionMarkCircle-DJ6cviju.js";const J={title:"Deprecated/TooltipIcon",component:g,tags:["autodocs"],argTypes:{triggerStyle:{options:Object.values(f),control:{type:"select"}}},args:{tooltip:{content:"Lorem ipsum dolor sit amet."},triggerStyle:"Primary"},parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Tooltip component](/docs/current_components-tooltip--documentation) instead."}}}},e=I=>d.jsx(g,{...I}),r=e.bind({}),o=e.bind({});o.args={iconSize:S.Size20};const t=e.bind({});t.args={triggerIcon:d.jsx(T,{filled:!0})};var i,s,p;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(p=(s=r.parameters)==null?void 0:s.docs)==null?void 0:p.source}}};var a,n,c;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(c=(n=o.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var m,l,u;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:`(args: TooltipIconProps) => {
  return <TooltipIcon {...args} />;
}`,...(u=(l=t.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};const K=["WithDefaultIconSize","WithCustomIconSize","WithCustomIcon"];export{t as WithCustomIcon,o as WithCustomIconSize,r as WithDefaultIconSize,K as __namedExportsOrder,J as default};
