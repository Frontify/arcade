import{j as r}from"./jsx-runtime-Nms4Y4qS.js";import{T as t}from"./TooltipIcon-CeymCZzr.js";import{I as d}from"./IconExclamationMarkCircle-BkFYjnTO.js";import{I as g}from"./IconInfo-DtUT3D8z.js";import{I as u}from"./IconQuestionMarkCircle-CMNESB9s.js";import{I as m}from"./InputLabel-CPjnR_AG.js";import"./index-BwDkhjyp.js";import"./_commonjsHelpers-BosuxZz1.js";import"./LegacyTooltip-C061YhHi.js";import"./useLink-DorAuuFQ.js";import"./useFocusable-CAGu0lKI.js";import"./useFocusRing-4Vnvtzpc.js";import"./SSRProvider-CYXx33DY.js";import"./chain-D5h1pgIF.js";import"./usePopper-DPXU-o95.js";import"./index-DxjWwZXO.js";import"./index-CfyPTyT-.js";import"./Button-CYWlMQhW.js";import"./useButton-DofEV6SJ.js";import"./IconSize-BcCrF_mi.js";import"./focusStyle-CBFElZiz.js";import"./merge-DI-veSMP.js";import"./Portal-0C9N3MSP.js";import"./useMemoizedId-EtHZ7Sxa.js";import"./IconCheckMark-BVQYjlwc.js";import"./IconExclamationMarkTriangle-BucVSAOs.js";import"./IconExclamationMarkTriangle24-C3Ss9MHq.js";import"./IconExclamationMarkCircle24-ChDY1Cve.js";const z={title:"Components/Input Label",component:m,tags:["autodocs"],args:{children:"Input Label",disabled:!1,required:!1,tooltip:{content:"Lorem ipsum dolor sit amet."}},parameters:{docs:{description:{component:"### This component is deprecated, please use the [new Label component](/docs/current_components-label--documentation) instead."}}}},e=c=>r.jsx(m,{...c}),o=e.bind({});o.args={...e.args,tooltip:[{triggerIcon:r.jsx(g,{}),triggerStyle:t.Danger,content:"Tooltip 1"},{triggerIcon:r.jsx(u,{}),triggerStyle:t.Primary,content:"Tooltip 2"},{triggerIcon:r.jsx(d,{filled:!0}),triggerStyle:t.Warning,content:"Tooltip 3"}]};e.__docgenInfo={description:"",methods:[],displayName:"InputLabel",props:{htmlFor:{required:!0,tsType:{name:"string"},description:""},required:{required:!1,tsType:{name:"boolean"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:""},clickable:{required:!1,tsType:{name:"boolean"},description:""},tooltip:{required:!1,tsType:{name:"union",raw:`| (LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)
| (LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)[]`,elements:[{name:"unknown"},{name:"Array",elements:[{name:"unknown"}],raw:"(LegacyTooltipProps & Pick<TooltipIconProps, 'triggerStyle' | 'triggerIcon'>)[]"}]},description:""},bold:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var i,n,p;e.parameters={...e.parameters,docs:{...(i=e.parameters)==null?void 0:i.docs,source:{originalSource:"(args: InputLabelProps) => <InputLabelComponent {...args} />",...(p=(n=e.parameters)==null?void 0:n.docs)==null?void 0:p.source}}};var s,a,l;o.parameters={...o.parameters,docs:{...(s=o.parameters)==null?void 0:s.docs,source:{originalSource:"(args: InputLabelProps) => <InputLabelComponent {...args} />",...(l=(a=o.parameters)==null?void 0:a.docs)==null?void 0:l.source}}};const B=["InputLabel","InputLabelWithMultipleTooltips"];export{e as InputLabel,o as InputLabelWithMultipleTooltips,B as __namedExportsOrder,z as default};
