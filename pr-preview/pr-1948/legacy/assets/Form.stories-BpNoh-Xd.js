import{j as r}from"./jsx-runtime-BYYWji4R.js";import{a as n}from"./chunk-D5ZWXAHU-Dm3eDOzv.js";import{a as d}from"./Box-YZVm4tCZ.js";import{c}from"./Button-Dq_bWxV2.js";import{F as u}from"./FormControl-DxAY9VXE.js";import{T as f}from"./TextInput-DlGYTQhf.js";import{r as x}from"./index-ClcD9ViR.js";import"./v4-CtRu48qb.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-CBFElZiz.js";import"./input-Bns_dUDU.js";import"./Divider-BRU6Vhb1.js";import"./LoadingCircle-N4gckcbl.js";import"./Switch-ZUgkv5mB.js";import"./useFocusRing-B9BQthcQ.js";import"./useEffectEvent-23OTMzEQ.js";import"./InputLabel-CDzbyvKS.js";import"./TooltipIcon-D7kHQ8sO.js";import"./LegacyTooltip-DZi8o8cC.js";import"./useLink-BjF4lkum.js";import"./useFocusable-CZi8_B22.js";import"./chain-B69fAeb4.js";import"./usePopper-6IkYpIP_.js";import"./index-BrlJLjep.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-DlnOb27V.js";import"./Portal-CFnKnrEz.js";import"./IconSize-BcCrF_mi.js";import"./useMemoizedId-DU5NJZZj.js";import"./IconCheckMark-DDrIoLdu.js";import"./IconExclamationMarkCircle24-4UiwpX0o.js";import"./IconExclamationMarkTriangle-DOh84ahI.js";import"./IconExclamationMarkTriangle24-BCoex7hw.js";import"./IconQuestionMarkCircle-7EPrDyIp.js";import"./TabItem-7zIDIg2o.js";import"./elements-BOYmskOL.js";import"./Tooltip-Do-cnin-.js";import"./useClickOutside-BcVMXM8r.js";import"./EnablePortalWrapper-NFMuvtML.js";import"./dialog-Dre1eVQK.js";import"./Tree-ChjucXEu.js";import"./immer-DBm1MMjE.js";import"./IconCross-BVasaH61.js";import"./validation-CJXPAjNB.js";import"./useButton-DEkuJNpl.js";const t=x.forwardRef(({children:e,"data-test-id":p="fondue-form",...s},l)=>r.jsx("form",{"data-test-id":p,ref:l,...s,children:e}));t.displayName="FondueForm";t.__docgenInfo={description:"",methods:[],displayName:"FondueForm",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'fondue-form'",computed:!1}}}};const sr={title:"Components/Form",component:t,tags:["autodocs"]},o=e=>r.jsxs(t,{...e,children:[r.jsx(u,{clickable:!0,label:{children:"Input Label",required:!1,htmlFor:"label"},children:r.jsx(f,{id:"label",value:"some value"})}),r.jsx(d,{className:"tw-my-2",children:r.jsx(c,{onClick:n("click"),children:"Save"})})]});o.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var i,m,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`(args: FormProps) => <Form {...args}>
        <FormControl clickable label={{
    children: 'Input Label',
    required: false,
    htmlFor: 'label'
  }}>
            <TextInput id="label" value="some value" />
        </FormControl>
        <Box className="tw-my-2">
            <Button onClick={action('click')}>Save</Button>
        </Box>
    </Form>`,...(a=(m=o.parameters)==null?void 0:m.docs)==null?void 0:a.source}}};const lr=["Default"];export{o as Default,lr as __namedExportsOrder,sr as default};
