import{j as t}from"./jsx-runtime-Nms4Y4qS.js";import{I as o,a as f,b as C}from"./IconEnum-DFmk4PR5.js";import{I as D}from"./IconDotsVertical16-nx6NRgIG.js";import{I as i}from"./IconIcon16-TK9s3MAx.js";import{B as O,a as L,b as T,c as S,d as p,e as W}from"./Button-9tAbtltX.js";import"./index-BwDkhjyp.js";import"./_commonjsHelpers-BosuxZz1.js";import"./useButton-k6gXNV_v.js";import"./useFocusable-VDjliD0z.js";import"./useFocusRing-Vzyl7-Lk.js";import"./SSRProvider-CYXx33DY.js";import"./chain-D5h1pgIF.js";import"./IconSize-BcCrF_mi.js";import"./focusStyle-CBFElZiz.js";import"./merge-DI-veSMP.js";const a={type:W.Button,style:T.Default,size:L.Medium,rounding:p.Medium,hideLabel:!1,disabled:!1,hugWidth:!0,children:"Button Text"},J={title:"Components/Button",component:O,parameters:{status:{type:"deprecated"},docs:{description:{component:"### This component is deprecated, please use the [new Button component](/docs/current_components-button--documentation) instead."}}},tags:["autodocs"],argTypes:{size:{options:Object.values(L),control:{type:"radio"}},style:{options:Object.values(T),control:{type:"radio"}},emphasis:{options:Object.values(S),control:{type:"radio"}},icon:{options:[o.Icon,o.DotsVertical,o.ColorFan,o.Anchor],mapping:{[o.Icon]:t.jsx(i,{}),[o.DotsVertical]:t.jsx(D,{}),[o.ColorFan]:t.jsx(f,{}),[o.Anchor]:t.jsx(C,{})},control:{type:"select"}},rounding:{options:Object.values(p),control:{type:"radio"}},type:{options:Object.values(W),control:{type:"radio"}},onClick:{action:"onClick"}}},c=A=>t.jsx(O,{...A}),e=c.bind({});e.args={...a};e.storyName="Text Label Only";const s=c.bind({});s.args={...a,hideLabel:!0,icon:t.jsx(i,{})};s.storyName="Icon Only";const r=c.bind({});r.args={...a,rounding:p.Full,icon:t.jsx(i,{}),hideLabel:!0};r.storyName="Icon Only rounded";const n=c.bind({});n.args={...a,icon:t.jsx(f,{})};n.storyName="Icon and Text Label";var u,d,m;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:"(args: ButtonProps) => <Button {...args} />",...(m=(d=e.parameters)==null?void 0:d.docs)==null?void 0:m.source}}};var l,g,y;s.parameters={...s.parameters,docs:{...(l=s.parameters)==null?void 0:l.docs,source:{originalSource:"(args: ButtonProps) => <Button {...args} />",...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var B,b,I;r.parameters={...r.parameters,docs:{...(B=r.parameters)==null?void 0:B.docs,source:{originalSource:"(args: ButtonProps) => <Button {...args} />",...(I=(b=r.parameters)==null?void 0:b.docs)==null?void 0:I.source}}};var h,j,x;n.parameters={...n.parameters,docs:{...(h=n.parameters)==null?void 0:h.docs,source:{originalSource:"(args: ButtonProps) => <Button {...args} />",...(x=(j=n.parameters)==null?void 0:j.docs)==null?void 0:x.source}}};const K=["Default","WithIcon","WithRoundedIcon","WithIconAndLabel"];export{e as Default,s as WithIcon,n as WithIconAndLabel,r as WithRoundedIcon,K as __namedExportsOrder,J as default};
