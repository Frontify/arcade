import{j as o}from"./jsx-runtime-Nms4Y4qS.js";import{a as d}from"./chunk-454WOBUV-CM0pFb8Z.js";import{B as n}from"./Box-BuX5K6c7.js";import{B as c}from"./Button-DqlvyMV-.js";import{F as u}from"./FormControl-BY_eMu2R.js";import{T as f}from"./TextInput-Bg0oUMhx.js";import{r as x}from"./index-BwDkhjyp.js";import"./v4-CQkTLCs1.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-CBFElZiz.js";import"./input-kU10G3ac.js";import"./Divider-DCi-HcbY.js";import"./LoadingCircle-CZrma5le.js";import"./SegmentedControls-EyNzYqVo.js";import"./useFocusRing-Vzyl7-Lk.js";import"./SSRProvider-CYXx33DY.js";import"./useFocusable-wKuCPQI4.js";import"./chain-D5h1pgIF.js";import"./useFormValidationState-Bo5Bz1o-.js";import"./FocusScope-DegwnO3I.js";import"./useField-DuYpSm4Z.js";import"./useLabels-DH9bA-v0.js";import"./context-C2PaECDE.js";import"./VisuallyHidden-BM0TqGgS.js";import"./useControlledState-C0C-dzuH.js";import"./useMemoizedId-EtHZ7Sxa.js";import"./motion-C48bHxkn.js";import"./Switch-O77c4Oge.js";import"./InputLabel-DrkD0R8a.js";import"./TooltipIcon-C8fsnENL.js";import"./LegacyTooltip-D2Oc8Nam.js";import"./useLink-Bd1Qu62S.js";import"./usePopper-DPXU-o95.js";import"./index-DxjWwZXO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CfyPTyT-.js";import"./Portal-0C9N3MSP.js";import"./IconSize-BcCrF_mi.js";import"./IconCheckMark-BVQYjlwc.js";import"./IconExclamationMarkCircle-BkFYjnTO.js";import"./IconExclamationMarkCircle24-ChDY1Cve.js";import"./IconExclamationMarkTriangle-BucVSAOs.js";import"./IconExclamationMarkTriangle24-C3Ss9MHq.js";import"./IconQuestionMarkCircle-CMNESB9s.js";import"./TabItem-DYJEWVSF.js";import"./elements-BOYmskOL.js";import"./Tooltip-CP_K22RC.js";import"./useClickOutside-CKV3CrvD.js";import"./EnablePortalWrapper-DvpkRq0I.js";import"./dialog-Dre1eVQK.js";import"./Tree-CHGGPXgG.js";import"./immer-DBm1MMjE.js";import"./IconGrabHandle12-EPEmE8ra.js";import"./IconCross-BUeQrH0h.js";import"./IconEyeOff-BaqRyiPL.js";import"./validation-C9S5KgfE.js";import"./useButton-DFNFXdnN.js";const t=x.forwardRef(({children:m,"data-test-id":a="fondue-form",...s},l)=>o.jsx("form",{"data-test-id":a,ref:l,...s,children:m}));t.displayName="FondueForm";t.__docgenInfo={description:"",methods:[],displayName:"FondueForm",props:{"data-test-id":{defaultValue:{value:"'fondue-form'",computed:!1},required:!1}}};const go={title:"Components/Form",component:t,tags:["autodocs"]},r=m=>o.jsxs(t,{...m,children:[o.jsx(u,{clickable:!0,label:{children:"Input Label",required:!1,htmlFor:"label"},children:o.jsx(f,{id:"label",value:"some value"})}),o.jsx(n,{className:"tw-my-2",children:o.jsx(c,{onClick:d("click"),children:"Save"})})]});r.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},"data-test-id":{required:!1,tsType:{name:"string"},description:""}}};var e,i,p;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`(args: FormProps) => <Form {...args}>
        <FormControl clickable label={{
    children: 'Input Label',
    required: false,
    htmlFor: 'label'
  }}>
            <TextInput id="label" value="some value" />
        </FormControl>
        <Box className="tw-my-2">
            <Button onClick={action('click')}>Save</Button>
        </Box>
    </Form>`,...(p=(i=r.parameters)==null?void 0:i.docs)==null?void 0:p.source}}};const vo=["Default"];export{r as Default,vo as __namedExportsOrder,go as default};
