import{j as r}from"./jsx-runtime-Nms4Y4qS.js";import{r as p}from"./index-BwDkhjyp.js";import{I as _}from"./IconNook16-gldlwduk.js";import{V as n}from"./validation-C9S5KgfE.js";import{B as j}from"./Box-CXhST6RG.js";import{N as i}from"./NumberInput-UNgRRfzN.js";import"./_commonjsHelpers-BosuxZz1.js";import"./borderStyle-D9jrV09G.js";import"./merge-DI-veSMP.js";import"./focusStyle-CBFElZiz.js";import"./input-Bq-V1zlq.js";import"./Button-CYWlMQhW.js";import"./useButton-DofEV6SJ.js";import"./useFocusable-CAGu0lKI.js";import"./useFocusRing-4Vnvtzpc.js";import"./SSRProvider-CYXx33DY.js";import"./chain-D5h1pgIF.js";import"./IconSize-BcCrF_mi.js";import"./Divider-DCi-HcbY.js";import"./Dropdown-CTG8V9Ey.js";import"./FocusScope-DYM0gkGr.js";import"./useOverlayTriggerState-Bq4IkdK0.js";import"./useControlledState-C0C-dzuH.js";import"./useMenuTrigger-BhJE1x_4.js";import"./useLabels-DH9bA-v0.js";import"./useLocalizedStringFormatter-D7Kogc_3.js";import"./context-C2PaECDE.js";import"./VisuallyHidden-YFPGrsWM.js";import"./helper-DdpWMU6g.js";import"./index-B8XB3FuZ.js";import"./isScrollable-Bts8_1NI.js";import"./SelectionManager-BuW52QpN.js";import"./useField-BhCfq6jD.js";import"./useFormValidationState-Vs0Uifwm.js";import"./usePopper-D9CaHHBx.js";import"./index-CfyPTyT-.js";import"./MenuItem-C9PA6k_H.js";import"./IconCaretRight-CxmZKZHS.js";import"./IconCheckMark-CLvJH1sB.js";import"./elements-BOYmskOL.js";import"./LoadingCircle-CZrma5le.js";import"./Trigger-BkAUJNF7.js";import"./IconCaretDown-Cxrx1sF_.js";import"./IconCaretDown16-BGp5IVAI.js";import"./IconCross-Bt-I3opn.js";import"./IconExclamationMarkTriangle-CRTWkDyu.js";import"./IconExclamationMarkTriangle24-GqPjgFpk.js";import"./IconTrashBin-Bl46mt1V.js";import"./IconTrashBin16-qlTE457i.js";import"./IconTrashBin24-CvdAkIgz.js";import"./EnablePortalWrapper-BTwPCJkS.js";import"./Portal-dPA1dSZg.js";import"./useMemoizedId-EtHZ7Sxa.js";import"./FormControl-CpFjR1tE.js";import"./InputLabel-Cp7I5Zy5.js";import"./TooltipIcon-fOjL_ywJ.js";import"./LegacyTooltip-BsRDxGT9.js";import"./useLink-DorAuuFQ.js";import"./IconExclamationMarkCircle-Cob4vb5T.js";import"./IconExclamationMarkCircle24-DpwtNT9z.js";import"./IconQuestionMarkCircle-C_agVHg1.js";import"./SegmentedControls-D3WaRgzO.js";import"./motion-C48bHxkn.js";import"./Switch-tgKqV9Jh.js";import"./TabItem-DYJEWVSF.js";import"./TextInput-D2gdfhfK.js";import"./IconEyeOff-Dzh4tjis.js";import"./Tooltip-BPz0Lj3Z.js";import"./useClickOutside-CKV3CrvD.js";import"./dialog-Dre1eVQK.js";import"./Tree-Dq_9_v-4.js";import"./immer-DBm1MMjE.js";import"./IconGrabHandle12-IS3l0vsO.js";import"./IconMinus16-homLHf6Z.js";import"./IconPlus16-DMEnDMzI.js";const Qt={title:"Components/Number Input",component:i,tags:["autodocs"],args:{clearable:!1},argTypes:{decorator:{description:"Add decorator element to start of the input",name:"decorator",defaultValue:void 0},suffix:{description:"String to append to the input value.",name:"suffix",defaultValue:void 0,control:{type:"text"}},disabled:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},readOnly:{type:"boolean",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:!1}}},controls:{description:"Enable increment buttons",name:"controls",defaultValue:!1,control:{type:"boolean"}},clearable:{description:"Enable clear button",name:"clearable",defaultValue:!1,control:{type:"boolean"}},hugWidth:{description:"If `true` element will have a `auto` width, else `full` width",defaultValue:!1,control:{type:"boolean"}},status:{description:"Set the current status of the input",name:"status",options:Object.values(n),control:{type:"select"},defaultValue:n.Default},stepInterval:{description:"Set the incremental value",name:"stepInterval",defaultValue:10,control:{type:"number"}},valueSelect:{description:"Highlight current input value.",name:"valueSelect",defaultValue:!1,control:{type:"boolean"}},onChange:{description:"onChange callback",name:"onChange",defaultValue:void 0,action:"onChange"},"data-test-id":{table:{disable:!0}}}},e=t=>r.jsx(i,{...t,placeholder:"Enter a number..."});e.args={clearable:!0};const o=t=>r.jsx(i,{...t,controls:!0,decorator:r.jsx(_,{})}),a=t=>{const[x,v]=p.useState(n.Success),[N,W]=p.useState(!1),E=(l=0)=>{v(l<0?n.Error:n.Success),W(l<0)};return r.jsx(i,{...t,onChange:E,controls:!0,status:x,valueSelect:N,defaultValue:3})},s=t=>r.jsx(j,{className:"tw-w-[400px]",children:r.jsx(i,{...t,controls:!0,hugWidth:!0,placeholder:"Input has a width of `auto`"})});e.__docgenInfo={description:"",methods:[],displayName:"BaseUsage"};o.__docgenInfo={description:"",methods:[],displayName:"WithDecoratorAndIncrementable"};a.__docgenInfo={description:"",methods:[],displayName:"WithErrorLessThanZero"};s.__docgenInfo={description:"",methods:[],displayName:"WithHugWidth"};var m,u,c;e.parameters={...e.parameters,docs:{...(m=e.parameters)==null?void 0:m.docs,source:{originalSource:`args => {
  return <NumberInput {...args} placeholder="Enter a number..." />;
}`,...(c=(u=e.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};var d,h,f;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  return <NumberInput {...args} controls decorator={<IconNook16 />} />;
}`,...(f=(h=o.parameters)==null?void 0:h.docs)==null?void 0:f.source}}};var b,g,S;a.parameters={...a.parameters,docs:{...(b=a.parameters)==null?void 0:b.docs,source:{originalSource:`args => {
  const [status, setStatus] = useState<Validation>(Validation.Success);
  const [valueSelect, setValueSelect] = useState<boolean>(false);
  const handleValidation = (value: number = 0) => {
    setStatus(value < 0 ? Validation.Error : Validation.Success);
    setValueSelect(value < 0);
  };
  return <NumberInput {...args} onChange={handleValidation} controls status={status} valueSelect={valueSelect} defaultValue={3} />;
}`,...(S=(g=a.parameters)==null?void 0:g.docs)==null?void 0:S.source}}};var V,I,y;s.parameters={...s.parameters,docs:{...(V=s.parameters)==null?void 0:V.docs,source:{originalSource:`args => {
  return <Box className="tw-w-[400px]">
            <NumberInput {...args} controls hugWidth placeholder="Input has a width of \`auto\`" />
        </Box>;
}`,...(y=(I=s.parameters)==null?void 0:I.docs)==null?void 0:y.source}}};const Xt=["BaseUsage","WithDecoratorAndIncrementable","WithErrorLessThanZero","WithHugWidth"];export{e as BaseUsage,o as WithDecoratorAndIncrementable,a as WithErrorLessThanZero,s as WithHugWidth,Xt as __namedExportsOrder,Qt as default};
